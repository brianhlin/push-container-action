name: 'Push Container Action'

description: 'Push built images to Docker Hub/OSG Harbor'

inputs:
  osg_series:
    description: 'OSG release series used to install packages'
    required: true
  repo:
    description: 'Input string that gets passed along to the docker build args'
    required: true
  tag_list:
    description: 'List of comma-separated tags that gets passed along to the docker build args'
    required: false
  registry_url:
    description: 'URL of the registry'
    required: true
  registry_user:
    description: 'Username of the registry'
    required: true
  registry_pass:
    description: 'Password of the registry'
    required: true

runs:
  using: "composite"
  steps:
  - uses: actions/checkout@v2

  - name: Generate tag list
    id: generate-tag-list
    env:
      REPO: ${{ inputs.repo }}
      OSG_SERIES: ${{ inputs.osg_series }}
    run: |
      if [ -z "${{ inputs.tag_list }}" ]; then
        docker_repo=${GITHUB_REPOSITORY/opensciencegrid\/docker-/opensciencegrid/}
        tag_list=()
        for image_tag in "$REPO" "$REPO-$(date +%Y%m%d-%H%M)"; do
          tag_list=$docker_repo:$OSG_SERIES-$REPO,$docker_repo:$OSG_SERIES-$REPO-$(date +%Y%m%d-%H%M)
        done
        IFS=,
        echo "::set-output name=taglist::${tag_list[*]}"
      else
        tag_list=$(echo ${{ inputs.tag_list }} | sed -E "s/([^,]+)/${{ inputs.registry_url }}\/\1/g")
        echo "::set-output name=taglist::$tag_list"
      fi
    shell: bash

  - name: Import Docker images from cache
    uses: actions/cache@v2
    with:
      path: /tmp/.buildx-cache
      key: ${{ inputs.osg_series}}-${{ inputs.repo }}-buildx-${{ github.sha }}-${{ github.run_id }}

  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v1

  - name: Log in to ${{ inputs.registry_url }}
    uses: docker/login-action@v1
    with:
      registry: ${{ inputs.registry_url }}
      username: ${{ inputs.registry_user }}
      password: ${{ inputs.registry_pass }}

  - name: Build image
    uses: docker/build-push-action@v2.2.2
    with:
      push: true
      build-args: |
        BASE_YUM_REPO=${{ inputs.repo }}
        BASE_OSG_SERIES=${{ inputs.osg_series }}
      tags: "${{ steps.generate-tag-list.outputs.taglist }}"
      cache-from: type=local,src=/tmp/.buildx-cache

